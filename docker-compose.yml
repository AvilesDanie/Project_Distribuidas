version: "3.9"

services:
  # Microservicio de Usuarios
  usuarios:
    build:
      context: ./ms-usuarios
    container_name: usuarios_service
    depends_on:
      - cockroach-init
      - rabbitmq1
    environment:
      - DATABASE_URL=cockroachdb://root@cockroach1:26257/usuarios_db
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq1:5672/
      - SECRET_KEY=supersecretkey123
      - RABBITMQ_QUEUE=usuarios_queue
      - RABBITMQ_NOTIF_QUEUE=notificaciones_queue
    networks:
      - backend

  # Microservicio de Eventos
  eventos:
    build:
      context: ./ms-eventos
    container_name: eventos_service
    depends_on:
      - cockroach-init
      - rabbitmq1
    environment:
      - DATABASE_URL=cockroachdb://root@cockroach2:26257/eventos_db
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq1:5672/
      - SECRET_KEY=supersecretkey123
      - RABBITMQ_QUEUE=eventos_queue
    networks:
      - backend

  # Microservicio de Entradas
  entradas:
    build:
      context: ./ms-entradas
    container_name: entradas_service
    depends_on:
      - cockroach-init
      - rabbitmq1
    environment:
      - DATABASE_URL=cockroachdb://root@cockroach3:26257/entradas_db
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq1:5672/
      - SECRET_KEY=supersecretkey123
      - RABBITMQ_QUEUE=entradas_queue
      - RABBITMQ_LISTENER_QUEUE=entradas_events
    networks:
      - backend

  # Microservicio de Notificaciones
  notificaciones:
    build:
      context: ./ms-notificaciones
    container_name: notificaciones_service
    depends_on:
      - rabbitmq1
      - cockroach-init
    environment:
      - DATABASE_URL=cockroachdb://root@cockroach1:26257/notificaciones_db
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq1:5672/
      - SECRET_KEY=supersecretkey123
      - RABBITMQ_QUEUE=notificaciones_queue
    networks:
      - backend

  # NGINX API Gateway
  nginx:
    build:
      context: ./nginx
    container_name: nginx_gateway
    ports:
      - "80:80"
    depends_on:
      - usuarios
      - eventos
      - entradas
      - notificaciones
    networks:
      - backend

  cockroach1:
    image: cockroachdb/cockroach:v21.2.17
    ports:
      - "26257:26257"
      - "8080:8080"
    volumes:
      - cockroach1:/cockroach/cockroach-data
    command:
      - start
      - --insecure
      - --store=node1
      - --listen-addr=0.0.0.0:26257
      - --http-addr=0.0.0.0:8080
      - --join=cockroach1:26257,cockroach2:26257,cockroach3:26257
      - --advertise-addr=cockroach1
    networks:
      - backend

  cockroach2:
    image: cockroachdb/cockroach:v21.2.17
    ports:
      - "26258:26257"
      - "8081:8080"
    volumes:
      - cockroach2:/cockroach/cockroach-data
    command:
      - start
      - --insecure
      - --store=node2
      - --listen-addr=0.0.0.0:26257
      - --http-addr=0.0.0.0:8080
      - --join=cockroach1:26257,cockroach2:26257,cockroach3:26257
      - --advertise-addr=cockroach2
    networks:
      - backend

  cockroach3:
    image: cockroachdb/cockroach:v21.2.17
    ports:
      - "26259:26257"
      - "8082:8080"
    volumes:
      - cockroach3:/cockroach/cockroach-data
    command:
      - start
      - --insecure
      - --store=node3
      - --listen-addr=0.0.0.0:26257
      - --http-addr=0.0.0.0:8080
      - --join=cockroach1:26257,cockroach2:26257,cockroach3:26257
      - --advertise-addr=cockroach3
    networks:
      - backend

  # RabbitMQ
  rabbitmq1:
    image: rabbitmq:3-management
    container_name: rabbitmq1
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - backend

  cockroach-init:
    image: cockroachdb/cockroach:v21.2.17
    depends_on:
      - cockroach1
      - cockroach2
      - cockroach3
    entrypoint: >
      /bin/sh -c "
        until ./cockroach init --insecure --host=cockroach1 2>/dev/null; do
          echo 'Waiting for CockroachDB to be ready...';
          sleep 2;
        done;
        ./cockroach sql --insecure --host=cockroach1 -e \"
          CREATE DATABASE IF NOT EXISTS usuarios_db;
          CREATE DATABASE IF NOT EXISTS eventos_db;
          CREATE DATABASE IF NOT EXISTS entradas_db;
          CREATE DATABASE IF NOT EXISTS notificaciones_db;\"
      "
    networks:
      - backend


volumes:
  cockroach1:
  cockroach2:
  cockroach3:


networks:
  backend:
